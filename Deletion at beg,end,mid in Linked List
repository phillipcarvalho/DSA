#include <stdio.h>
#include <stdlib.h>

struct node{
    int data;
    struct node* next;
};
void print(struct node *head){
    struct node *temp=head;
    while(temp!=NULL){
    printf("%d",temp->data);
    temp=temp->next;
}
}

void deletebeg(struct node **head){
    if(head!=NULL){
        struct node *temp=(struct node*)malloc(sizeof(struct node));
        temp=*head;
        *head=(*head)->next;
        free(temp);
    }
}
void deleteend(struct node **head){
    struct node* ptr=*head;
    struct node* prevptr;
    while(ptr->next!=NULL){
        prevptr=ptr;
        ptr=ptr->next;
    }
    prevptr->next=NULL;
    free(ptr);
}
void deletemid(struct node **head,int search){
    struct node *ptr=*head;
    struct node* prevptr;
    while(ptr->data!=search && ptr!=NULL){
        prevptr=ptr;
        ptr=ptr->next;
    }
    if(ptr!=NULL){
        prevptr->next=ptr->next;
        free(ptr);
    }
    else{
        printf("Search element not in the list");
    }
}
int main(){
    int n;
    int x;
    scanf("%d",&n);
   struct node* head = (struct node*)malloc(sizeof(struct node));
    scanf("%d",&x);
    head->data=x;
    head->next=NULL;
    
    struct node *current=head;
    for(int i=2;i<=n;i++){
        scanf("%d",&x);
        struct node* newnode = (struct node*)malloc(sizeof(struct node));
        newnode->data=x;
        newnode->next=NULL;
        current->next=newnode;
        current=newnode;
    }
    
    deletebeg(&head);
    deleteend(&head);
    deletemid(&head,3);
    print(head);
}
